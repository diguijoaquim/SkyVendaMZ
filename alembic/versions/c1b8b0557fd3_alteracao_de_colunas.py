"""alteracao de colunas

Revision ID: c1b8b0557fd3
Revises: 
Create Date: 2024-11-27 12:38:49.775202

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c1b8b0557fd3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_pesquisas_id', table_name='pesquisas')
    op.drop_index('ix_pesquisas_termo_pesquisa', table_name='pesquisas')
    op.drop_table('pesquisas')
    op.drop_index('ix_comentario_comentarioID', table_name='comentario')
    op.drop_table('comentario')
    op.drop_index('ix_transacoes_id', table_name='transacoes')
    op.drop_table('transacoes')
    op.drop_index('ix_wallet_id', table_name='wallet')
    op.drop_table('wallet')
    op.drop_index('ix_publicacoes_id', table_name='publicacoes')
    op.drop_table('publicacoes')
    op.drop_index('ix_seguidores_id', table_name='seguidores')
    op.drop_table('seguidores')
    op.drop_index('ix_usuarios_email', table_name='usuarios')
    op.drop_index('ix_usuarios_id', table_name='usuarios')
    op.drop_index('ix_usuarios_username', table_name='usuarios')
    op.drop_index('ix_anuncio_id', table_name='anuncio')
    op.drop_table('anuncio')
    op.drop_table('produto_likes')
    op.drop_index('ix_pedido_id', table_name='pedido')
    
    op.drop_index('ix_endereco_envio_id', table_name='endereco_envio')
    op.drop_table('endereco_envio')
    op.drop_index('ix_avaliacoes_id', table_name='avaliacoes')
    op.drop_table('avaliacoes')
    op.drop_index('ix_messages_id', table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_admin_id', table_name='admin')
    op.drop_table('admin')
    op.drop_index('ix_produto_id', table_name='produto')
    op.drop_index('ix_produto_slug', table_name='produto')
   
    op.drop_index('ix_info_usuario_id', table_name='info_usuario')
    op.drop_table('info_usuario')
    op.drop_index('ix_denunciaProduto_id', table_name='denunciaProduto')
    op.drop_table('denunciaProduto')
    op.drop_index('ix_notificacoes_id', table_name='notificacoes')
    op.drop_table('notificacoes')
    op.drop_index('ix_status_id', table_name='status')
    op.drop_table('status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conteudo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('imagem_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('expira_em', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('custo_total', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('visualizacoes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='status_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='status_pkey')
    )
    op.create_index('ix_status_id', 'status', ['id'], unique=False)
    op.create_table('notificacoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mensagem', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('estado', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='notificacoes_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notificacoes_pkey')
    )
    op.create_index('ix_notificacoes_id', 'notificacoes', ['id'], unique=False)
    op.create_table('denunciaProduto',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('produtoID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('CustomerID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('motivo', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data_denuncia', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CustomerID'], ['usuarios.id'], name='denunciaProduto_CustomerID_fkey'),
    sa.ForeignKeyConstraint(['produtoID'], ['produto.id'], name='denunciaProduto_produtoID_fkey'),
    sa.PrimaryKeyConstraint('id', name='denunciaProduto_pkey')
    )
    op.create_index('ix_denunciaProduto_id', 'denunciaProduto', ['id'], unique=False)
    op.create_table('info_usuario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('foto_retrato', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('foto_bi_frente', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('foto_bi_verso', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('provincia', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('distrito', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('data_nascimento', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('localizacao', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('contacto', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('sexo', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('nacionalidade', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bairro', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('revisao', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='info_usuario_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='info_usuario_pkey')
    )
    op.create_index('ix_info_usuario_id', 'info_usuario', ['id'], unique=False)
    op.create_table('produto',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('produto_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('capa', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('fotos', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('preco', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantidade_estoque', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('estado', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('provincia', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('distrito', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('revisao', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('disponiblidade', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('categoria', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('detalhes', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('visualizacoes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('CustomerID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('likes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_publicacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('negociavel ', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('promocao', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['CustomerID'], ['usuarios.id'], name='produto_CustomerID_fkey'),
    sa.PrimaryKeyConstraint('id', name='produto_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_produto_slug', 'produto', ['slug'], unique=True)
    op.create_index('ix_produto_id', 'produto', ['id'], unique=False)
    op.create_table('admin',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='admin_pkey'),
    sa.UniqueConstraint('email', name='admin_email_key')
    )
    op.create_index('ix_admin_id', 'admin', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('message_type', postgresql.ENUM('TEXT', 'IMAGE', 'PDF', 'AUDIO', 'VIDEO', name='messagetype'), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['usuarios.id'], name='messages_receiver_id_fkey'),
    sa.ForeignKeyConstraint(['sender_id'], ['usuarios.id'], name='messages_sender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey')
    )
    op.create_index('ix_messages_id', 'messages', ['id'], unique=False)
    op.create_table('avaliacoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('avaliador_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('avaliado_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('estrelas', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_criacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['avaliado_id'], ['usuarios.id'], name='avaliacoes_avaliado_id_fkey'),
    sa.ForeignKeyConstraint(['avaliador_id'], ['usuarios.id'], name='avaliacoes_avaliador_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='avaliacoes_pkey')
    )
    op.create_index('ix_avaliacoes_id', 'avaliacoes', ['id'], unique=False)
    op.create_table('endereco_envio',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('CustomerID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pedidoID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('endereco_line1', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('endereco_line2', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cidade', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('estado', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('codigo_postal', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('pais', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CustomerID'], ['usuarios.id'], name='endereco_envio_CustomerID_fkey'),
    sa.ForeignKeyConstraint(['pedidoID'], ['pedido.id'], name='endereco_envio_pedidoID_fkey'),
    sa.PrimaryKeyConstraint('id', name='endereco_envio_pkey')
    )
    op.create_index('ix_endereco_envio_id', 'endereco_envio', ['id'], unique=False)
    op.create_table('pedido',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('produto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantidade', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('preco_unitario', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('preco_total', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('data_pedido', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('aceito_pelo_vendedor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('recebido_pelo_cliente', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('data_aceite', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_envio', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_entrega', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['usuarios.id'], name='pedido_customer_id_fkey'),
    sa.ForeignKeyConstraint(['produto_id'], ['produto.id'], name='pedido_produto_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pedido_pkey')
    )
    op.create_index('ix_pedido_id', 'pedido', ['id'], unique=False)
    op.create_table('produto_likes',
    sa.Column('produto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['produto_id'], ['produto.id'], name='produto_likes_produto_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='produto_likes_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('produto_id', 'usuario_id', name='produto_likes_pkey')
    )
    op.create_table('anuncio',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titulo', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tipo_anuncio', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('produto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('promovido_em', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expira_em', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['produto_id'], ['produto.id'], name='anuncio_produto_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='anuncio_pkey'),
    sa.UniqueConstraint('produto_id', name='anuncio_produto_id_key')
    )
    op.create_index('ix_anuncio_id', 'anuncio', ['id'], unique=False)
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usuarios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('nome', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('senha', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('google_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('foto_perfil', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('conta_pro', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('limite_diario_publicacoes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_cadastro', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_ativacao_pro', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('revisao', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
    sa.UniqueConstraint('google_id', name='usuarios_google_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_usuarios_username', 'usuarios', ['username'], unique=True)
    op.create_index('ix_usuarios_id', 'usuarios', ['id'], unique=False)
    op.create_index('ix_usuarios_email', 'usuarios', ['email'], unique=True)
    op.create_table('seguidores',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('seguidor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['seguidor_id'], ['usuarios.id'], name='seguidores_seguidor_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='seguidores_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='seguidores_pkey')
    )
    op.create_index('ix_seguidores_id', 'seguidores', ['id'], unique=False)
    op.create_table('publicacoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conteudo', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='publicacoes_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='publicacoes_pkey')
    )
    op.create_index('ix_publicacoes_id', 'publicacoes', ['id'], unique=False)
    op.create_table('wallet',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('saldo_principal', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('saldo_congelado', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('bonus', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='wallet_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='wallet_pkey'),
    sa.UniqueConstraint('usuario_id', name='wallet_usuario_id_key')
    )
    op.create_index('ix_wallet_id', 'wallet', ['id'], unique=False)
    op.create_table('transacoes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('msisdn', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('valor', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('referencia', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('data_hora', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='transacoes_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transacoes_pkey')
    )
    op.create_index('ix_transacoes_id', 'transacoes', ['id'], unique=False)
    op.create_table('comentario',
    sa.Column('comentarioID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('produtoID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('CustomerID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comentario', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data_comentario', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['CustomerID'], ['usuarios.id'], name='comentario_CustomerID_fkey'),
    sa.ForeignKeyConstraint(['produtoID'], ['produto.id'], name='comentario_produtoID_fkey'),
    sa.PrimaryKeyConstraint('comentarioID', name='comentario_pkey')
    )
    op.create_index('ix_comentario_comentarioID', 'comentario', ['comentarioID'], unique=False)
    op.create_table('pesquisas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('termo_pesquisa', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('categoria_pesquisa', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('data_pesquisa', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name='pesquisas_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pesquisas_pkey')
    )
    op.create_index('ix_pesquisas_termo_pesquisa', 'pesquisas', ['termo_pesquisa'], unique=False)
    op.create_index('ix_pesquisas_id', 'pesquisas', ['id'], unique=False)
    # ### end Alembic commands ###
