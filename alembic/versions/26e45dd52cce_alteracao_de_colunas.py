"""alteracao de colunas

Revision ID: 26e45dd52cce
Revises: c1b8b0557fd3
Create Date: 2024-11-27 13:05:24.859612

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '26e45dd52cce'
down_revision: Union[str, None] = 'c1b8b0557fd3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pedido')
    op.drop_table('produto')
    op.drop_table('usuarios')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usuarios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('nome', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('senha', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('google_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('foto_perfil', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('conta_pro', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('limite_diario_publicacoes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_cadastro', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_ativacao_pro', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('revisao', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
    sa.UniqueConstraint('google_id', name='usuarios_google_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pedido',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('produto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantidade', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('preco_unitario', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('preco_total', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('data_pedido', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('aceito_pelo_vendedor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('recebido_pelo_cliente', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('data_aceite', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_envio', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('data_entrega', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['usuarios.id'], name='pedido_customer_id_fkey'),
    sa.ForeignKeyConstraint(['produto_id'], ['produto.id'], name='pedido_produto_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pedido_pkey')
    )
    op.create_table('produto',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('capa', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('fotos', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('preco', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantidade_estoque', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('estado', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('provincia', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('distrito', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('revisao', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('disponiblidade', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('categoria', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('detalhes', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('tipo', sa.VARCHAR(length=350), autoincrement=False, nullable=True),
    sa.Column('visualizacoes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('CustomerID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('likes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_publicacao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('negociavel ', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('promocao', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['CustomerID'], ['usuarios.id'], name='produto_CustomerID_fkey'),
    sa.PrimaryKeyConstraint('id', name='produto_pkey')
    )
    # ### end Alembic commands ###
